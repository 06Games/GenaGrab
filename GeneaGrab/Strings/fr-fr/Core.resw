<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Provider.AD06" xml:space="preserve">
    <value>Archives départementales des Alpes-Maritimes</value>
    <comment>departement06.fr</comment>
  </data>
  <data name="Provider.AD79-86" xml:space="preserve">
    <value>Archives départementales des Deux-Sèvres et de la Vienne</value>
    <comment>archives-deux-sevres-vienne.fr</comment>
  </data>
  <data name="Provider.Antenati" xml:space="preserve">
    <value>Antenati</value>
    <comment>antenati.san.beniculturali.it</comment>
  </data>
  <data name="Provider.CG06" xml:space="preserve">
    <value>Archives départementales des Alpes-Maritimes (CG06)</value>
    <comment>departement06.fr</comment>
  </data>
  <data name="Provider.Geneanet" xml:space="preserve">
    <value>Geneanet</value>
    <comment>geneanet.org</comment>
  </data>
  <data name="Provider.NiceHistorique" xml:space="preserve">
    <value>Nice Historique</value>
    <comment>www.nicehistorique.org</comment>
  </data>
  <data name="Registry.Name" xml:space="preserve">
    <value>Registre</value>
  </data>
  <data name="Registry.Type.Banns" xml:space="preserve">
    <value>Publication des bans</value>
    <comment>Publication des bans</comment>
  </data>
  <data name="Registry.Type.Baptism" xml:space="preserve">
    <value>Baptêmes</value>
    <comment>Actes de baptême</comment>
  </data>
  <data name="Registry.Type.BaptismTable" xml:space="preserve">
    <value>Table des baptêmes</value>
    <comment>Tableau des actes de baptême</comment>
  </data>
  <data name="Registry.Type.Birth" xml:space="preserve">
    <value>Naissances</value>
    <comment>Actes de naissance</comment>
  </data>
  <data name="Registry.Type.BirthTable" xml:space="preserve">
    <value>Table des naissances</value>
    <comment>Table des actes de naissance</comment>
  </data>
  <data name="Registry.Type.Book" xml:space="preserve">
    <value>Livre</value>
    <comment>Ouvrage qui n'est pas destiné à être publié régulièrement</comment>
  </data>
  <data name="Registry.Type.Burial" xml:space="preserve">
    <value>Sépultures</value>
    <comment>Actes de sépulture</comment>
  </data>
  <data name="Registry.Type.BurialTable" xml:space="preserve">
    <value>Table des sépultures</value>
    <comment>Tableau des actes de sépulture</comment>
  </data>
  <data name="Registry.Type.CadastralAssemblyTable" xml:space="preserve">
    <value>Tableau d'assemblage cadastral</value>
    <comment>Indication de la disposition des sections cadastrales</comment>
  </data>
  <data name="Registry.Type.CadastralMap" xml:space="preserve">
    <value>Plan cadastral</value>
    <comment>Aperçu des cadastres dans une circonscription foncière</comment>
  </data>
  <data name="Registry.Type.CadastralMatrix" xml:space="preserve">
    <value>Matrice cadastrale</value>
    <comment>Registre indiquant les augmentations et diminutions des superficies et des revenus enregistrées sur les matrices cadastrales</comment>
  </data>
  <data name="Registry.Type.CadastralSectionStates" xml:space="preserve">
    <value>États de section cadastrale</value>
    <comment>Tableau indicatif des propriétés foncières, leurs superficies et leurs revenus</comment>
  </data>
  <data name="Registry.Type.Census" xml:space="preserve">
    <value>Recensement</value>
    <comment>Recensement de la population</comment>
  </data>
  <data name="Registry.Type.Communion" xml:space="preserve">
    <value>Communions</value>
    <comment>Registre des communions</comment>
  </data>
  <data name="Registry.Type.Confirmation" xml:space="preserve">
    <value>Confirmations</value>
    <comment>Registre des confirmations</comment>
  </data>
  <data name="Registry.Type.Death" xml:space="preserve">
    <value>Décès</value>
    <comment>Actes de décès</comment>
  </data>
  <data name="Registry.Type.DeathTable" xml:space="preserve">
    <value>Table des décès</value>
    <comment>Table des actes de décès</comment>
  </data>
  <data name="Registry.Type.LiberStatutAnimarum" xml:space="preserve">
    <value>États des âmes</value>
    <comment>Registre enregistrant les données biographiques et religieuses des paroissiens</comment>
  </data>
  <data name="Registry.Type.Marriage" xml:space="preserve">
    <value>Mariages</value>
    <comment>Actes de mariage</comment>
  </data>
  <data name="Registry.Type.MarriageTable" xml:space="preserve">
    <value>Table des mariages</value>
    <comment>Table des actes de mariage</comment>
  </data>
  <data name="Registry.Type.Military" xml:space="preserve">
    <value>Militaire</value>
    <comment>Matricules militaires</comment>
  </data>
  <data name="Registry.Type.Newspaper" xml:space="preserve">
    <value>Journal</value>
    <comment>Feuille quotidienne ou périodique donnant les nouvelles et les accompagnant ou non d’articles raisonnés</comment>
  </data>
  <data name="Registry.Type.Notarial" xml:space="preserve">
    <value>Actes notariés</value>
    <comment>Actes notariés non catégorisés</comment>
  </data>
  <data name="Registry.Type.Other" xml:space="preserve">
    <value>Autres</value>
    <comment>Hors catégorie</comment>
  </data>
  <data name="Registry.Type.Periodical" xml:space="preserve">
    <value>Périodique</value>
    <comment>Qualifie un ouvrage ou un écrit qui paraît par livraisons successives, dans des temps fixes et réglés.</comment>
  </data>
  <data name="Registry.Type.Protocol" xml:space="preserve">
    <value>Protocole</value>
    <comment>La minute, ou compte rendu officiel, d'une négociation ou d'une transaction ; en particulier, un document établi officiellement qui constitue la base juridique des accords ultérieurs fondés sur ce document.</comment>
  </data>
  <data name="Registry.Type.Minutes" xml:space="preserve">
    <value>Minute</value>
    <comment>Original d'un acte authentique conservé par l'autorité qui le détient et qui ne peut s'en séparer (acte notarié dans le cas d'un notaire, décision de justice dans le cas d'une juridiction...).</comment>
  </data>
  <data name="Registry.Type.Engrossments" xml:space="preserve">
    <value>Grosse</value>
    <comment>Copie, par un notaire, d'une obligation, d'un contrat, etc., ou, par un greffier, d'un jugement, d'une décision, qui est délivrée sous forme exécutoire et qui était généralement écrite en plus gros caractères que la minute. Parfois appelée copie exécutoire</comment>
  </data>
  <data name="Registry.Type.Catalogue" xml:space="preserve">
    <value>Répertoire</value>
    <comment>Inventaire méthodique, lexique où les matières sont rangées dans un ordre qui permet de les retrouver facilement.</comment>
  </data>
</root>